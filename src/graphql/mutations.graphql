mutation createListingWithImages($objects: [listing_insert_input!]!) {
  insert_listing(objects: $objects) {
    returning {
      id
      created_at
    }
  }
}

mutation insertListing(
  $nickname: String!
  $no_of_beds: numeric!
  $no_of_bathrooms: numeric!
  $no_of_guests: numeric!
  $price: numeric!
  $rating: numeric
  $title: String!
  $transit: String = ""
  $summary: String = ""
  $state: String = ""
  $space: String = ""
  $notes: String = ""
  $neighborhood: String = ""
  $house_rules: String = ""
  $country: String = ""
  $city: String = ""
  $access: String = ""
  $interaction_with_guests: String = "", 
  $video: String = "",
  $inquire_now_mail_to: String = ""
  $currency: String = ""
) {
  insert_listing(
    objects: {
      nickname: $nickname
      no_of_beds: $no_of_beds
      no_of_bathrooms: $no_of_bathrooms
      no_of_guests: $no_of_guests
      price: $price
      rating: $rating
      title: $title
      transit: $transit
      summary: $summary
      state: $state
      space: $space
      notes: $notes
      neighborhood: $neighborhood
      house_rules: $house_rules
      country: $country
      city: $city
      access: $access
      interaction_with_guests: $interaction_with_guests,
      video: $video
      inquire_now_mail_to: $inquire_now_mail_to
      currency: $currency
    }
  ) {
    returning {
      id
      title
    }
  }
}

mutation addListingImages($objects: [listing_image_insert_input!]!) {
  insert_listing_image(objects: $objects) {
    returning {
      url
      id
    }
  }
}

mutation updateListingByPk(
  $id: uuid!
  $_set: listing_set_input = { inquire_now_mail_to: "" }
) {
  update_listing_by_pk(pk_columns: { id: $id }, _set: $_set) {
    id
    title
  }
}

mutation deleteListing($id: uuid!) {
  delete_listing_by_pk(id: $id) {
    id
  }
}

mutation deleteListingImages($_eq: uuid!) {
  delete_listing_image(where: { listing_id: { _eq: $_eq } }) {
    returning {
      id
    }
  }
}
